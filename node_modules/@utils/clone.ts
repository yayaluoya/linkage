/**
 * 克隆一个目标
 * 采用深度遍历的方式，能克隆一个对象的所有内容
 * @param val 
 */
export function clone(val: any) {
    let k, out, tmp;

    if (Array.isArray(val)) {
        out = Array(k = val.length);
        while (k--) out[k] = (tmp = val[k]) && typeof tmp === 'object' ? clone(tmp) : tmp;
        return out;
    }

    if (Object.prototype.toString.call(val) === '[object Object]') {
        out = {}; // null
        for (k in val) {
            if (k === '__proto__') {
                Object.defineProperty(out, k, {
                    value: clone(val[k]),
                    configurable: true,
                    enumerable: true,
                    writable: true
                });
            } else if (typeof val[k] !== 'function') { // MODIFICATION: skip functions
                out[k] = (tmp = val[k]) && typeof tmp === 'object' ? clone(tmp) : tmp;
            }
        }
        return out;
    }

    return val;
}